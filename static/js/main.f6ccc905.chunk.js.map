{"version":3,"sources":["componentes/piezas/Footer.js","componentes/piezas/Header.js","componentes/Home.jsx","componentes/firebase.js","componentes/Mesero/OrdenDetalles.jsx","componentes/Mesero/NombreCliente.jsx","componentes/BotonOpciones.jsx","componentes/Mesero/NuevaOrden.jsx","componentes/Mesero/Mesero.js","componentes/Cocina/TiempoDePreparación.jsx","componentes/Cocina/EstructuraDelPedido.jsx","componentes/Cocina/Cocina.js","serviceWorker.js","index.js","App.js"],"names":["Footer","className","Header","id","href","to","Home","Fragment","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","OrdenDetalles","seleccionados","name","setSeleccionados","setTotal","total","setName","map","p","key","defaultValue","cantidad","disabled","nombre","precio","type","value","onClick","elegido","productosEliminados","filter","element","Eliminar","onChange","totalNeto","reduce","a","b","TotalPedidos","firestore","collection","add","cliente","hora","Date","preparación","productos","producto","subtotal","estado","then","NombreCliente","e","target","data-testid","BotonOpciones","funcionDeSetearTipo","texto","tipo","NuevaOrden","setTipo","nuevoproducto","find","newArray","select","Agregando","src","url","alt","Mesero","useState","setProductos","useEffect","where","get","dato","array","forEach","doc","push","data","catch","error","console","log","TiempoDePreparacion","fin","duración","toDate","getTime","inicio","miliseg","tiempo","parseInt","EstructuraDelPedido","origen","Entregar","Listo","prod","getHours","getMinutes","getSeconds","Cocina","orden","setOrden","setEstado","orderBy","update","Boolean","window","location","hostname","match","ReactDOM","render","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f6ccc905.chunk.js","sourcesContent":["import React from 'react';\nimport '../../css/App.css'\nfunction Footer() {\n  return (\n    <footer  className=\"row centered\">\n      <p>@2019 Derechos Reservados</p>\n    </footer>\n  );\n}\nexport default Footer;","import React from 'react';\nimport '../../css/App.css'\n\nimport { Link } from \"react-router-dom\";\nfunction Header() {\n  return (\n    <header className=\"\">\n      <nav className=\"navbar\">\n        <ul className=\"nav-links\">\n          <li id=\"title\"><a href=\"/\">Burger Queen</a></li>\n          <li className=\"nav-item\"><Link to=\"/about\">Mesero</Link></li>\n          <li className=\"nav-item\"><Link to=\"/cocina\">Cocina</Link></li>\n        </ul>\n      </nav>\n    </header>\n  );\n}\nexport default Header;\n","import React from 'react';\nimport Footer from './piezas/Footer';\nimport Header from './piezas/Header';\n\n\nconst Home = () => {\n  return (\n    <React.Fragment>\n      <Header />\n      <div className=\"bg-home Site-content\"></div>\n      <Footer />\n    </React.Fragment>\n  );\n}\nexport default Home;\n\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDCm5JWgQ3Vm4X2a7Q7ZCz6aqOp1gHcTzI\",\n  authDomain: \"burger-queen-react-bls.firebaseapp.com\",\n  databaseURL: \"https://burger-queen-react-bls.firebaseio.com\",\n  projectId: \"burger-queen-react-bls\",\n  storageBucket: \"burger-queen-react-bls.appspot.com\",\n  messagingSenderId: \"658478814346\",\n  appId: \"1:658478814346:web:f4bf5219e89878fd114973\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import React from 'react';\nimport firebase from '../firebase';\nimport '../../css/App.css';\n\nexport const OrdenDetalles = ({ seleccionados, name, setSeleccionados, setTotal, total,setName }) => {\n  const Eliminar = (elegido) => {\n    const productosEliminados = seleccionados.filter(element => element.nombre !== elegido)\n    return setSeleccionados(productosEliminados);\n  }\n  const TotalPedidos = () => {\n    const totalNeto = seleccionados.reduce((a, b) => (a + b.total), 0);\n    return setTotal(totalNeto);\n  }\n\n  const Envio = () => {\n    const añadirOrden = firebase.firestore()\n      .collection(\"orden\")\n      .add({\n        cliente: name,\n        hora: new Date(),\n        preparación: 0,\n        total: total,\n        productos: seleccionados.map((element) => ({ producto: element.nombre, cantidad: element.cantidad, subtotal: element.total })),\n        estado: 'pendiente',\n        //nombre: seleccionados.nombre,\n      })\n      // .then((res) => {alert('Se envió tu pedido a cocina');\n      //                 seleccionados('')} \n      //             );\n      .then(() => { \n        setSeleccionados([]);\n        setName('');\n      });\n    return añadirOrden;\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"w-50\">\n        <form className=\"order-box\">\n          <h1>Detalles de la Orden</h1>\n          <label className=\"mg-1\">Cliente: &nbsp;{name}</label>\n          <div>\n            <table className=\"mg-1\">\n              <thead className=\"\">\n                <tr >\n                  <th>Cantidad</th>\n                  <th>Producto</th>\n                  <th>Precio</th>\n                  <th>Total</th>\n\n                </tr>\n              </thead>\n              <tbody>\n                {seleccionados.map(p => (\n                  <tr key={p.id}>\n                    {/* <td> <input type=\"number\" min=\"1\" max=\"10\" value={p.cantidad}></input></td> */}\n                    {/* <td><label>{p.cantidad}</label></td> */}\n                    <td><textarea defaultValue={p.cantidad} disabled></textarea></td>\n                    <td>{p.nombre}</td>\n                    <td>${p.precio}</td>\n                    <td>${p.total}</td>\n                    <td>\n                      <button type=\"button\" value={p.id} className=\"btn\" onClick={() => { Eliminar(p.nombre) }}>X</button>\n                    </td>\n                  </tr>\n                ))}\n\n              </tbody>\n            </table>\n\n            <label>TOTAL<textarea onChange={TotalPedidos()} defaultValue={total} /></label>\n          </div>\n          <div>\n            <button type=\"button\" className=\"btn\" onClick={() => { Envio() }}>ENVIAR</button>\n          </div>\n        </form>\n      </div>\n    </React.Fragment>\n  );\n}\nexport default OrdenDetalles;\n\n","import React from 'react';\n\nconst NombreCliente = ({ name, setName }) => {\n\t\n\treturn (\n\t\t<div>\n\t\t\t<label className=\"\">Nombre del Cliente:\n              <input  type=\"text\" className=\"\" value={name} onChange={(e) => {setName(e.target.value)}} data-testid=\"inputNombreCliente\"/>\n\t\t\t</label>\n\t\t</div>\n\t)\n}\n\nexport default NombreCliente;","import React from 'react';\n\nconst BotonOpciones = ({ funcionDeSetearTipo, texto, tipo }) => (\n    <button type=\"button\" className=\"btn\" onClick={() => { funcionDeSetearTipo(tipo) }}>{texto}</button>\n);\nexport default BotonOpciones","import React from 'react';\nimport NombreCliente from './NombreCliente';\nimport BotonOpciones from '../BotonOpciones';\n\nconst NuevaOrden = ({ name, setName, setTipo, productos, seleccionados, setSeleccionados }) => {\n\n\tconst Agregando = (nuevoproducto) => {\n\t\tif (seleccionados.find(element => element.id === nuevoproducto.id)) {\n\t\t\tconst newArray = seleccionados.map((select) => {\n\t\t\t\tif (select.id === nuevoproducto.id) {\n\t\t\t\t\tselect.cantidad = select.cantidad + 1;\n\t\t\t\t\tselect.total = select.precio * select.cantidad;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t//console.log({ ...select, cantidad: select.cantidad +1 })\n\t\t\t\t\t\tselect\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tselect\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t})\n\t\t\tsetSeleccionados(newArray);\n\t\t} else {\n\t\t\tsetSeleccionados([...seleccionados, { ...nuevoproducto, cantidad: 1, total: nuevoproducto.precio }]);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"w-50\"> \n\t\t\t<form className=\"order-box\">\n\t\t\t\t<h1>Nueva Orden</h1>\n\t\t\t\t<NombreCliente name={name} setName={setName} />\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<BotonOpciones funcionDeSetearTipo={setTipo} texto=\"DESAYUNO\" tipo=\"desayuno\" />\n\t\t\t\t\t<BotonOpciones funcionDeSetearTipo={setTipo} texto=\"ALMUERZO  Y CENA\" tipo=\"almuerzo\" />\n\t\t\t\t\t<BotonOpciones funcionDeSetearTipo={setTipo} texto=\"BEBIDAS\" tipo=\"bebidas\" />\n\t\t\t\t\t<BotonOpciones funcionDeSetearTipo={setTipo} texto=\"EXTRAS\" tipo=\"extra\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\" text-center\" data-testid=\"productos\">\n\t\t\t\t\t\t{productos.map(p => (\n\t\t\t\t\t\t\t<div key={p.id} className=\"product\" onClick={() => { Agregando(p) }} >\n\t\t\t\t\t\t\t\t<img className=\"img-card\" src={p.url} alt=\"imagenes de comida\" />\n\t\t\t\t\t\t\t\t<h1 className=\"text-card border\">{p.nombre} </h1>\n\t\t\t\t\t\t\t\t<h1 className=\"text-card border\"> ${p.precio}</h1>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t)\n};\nexport default NuevaOrden;","import React, { useState, useEffect } from 'react';\nimport firebase from '../firebase';\nimport Header from '../piezas/Header';\nimport Footer from '../piezas/Footer';\nimport '../../css/App.css'\nimport OrdenDetalles from './OrdenDetalles';\nimport NuevaOrden from './NuevaOrden';\n\nconst Mesero = () => {\n  const [tipo, setTipo] = useState('desayuno');\n  const [productos, setProductos] = useState([]);\n  const [seleccionados, setSeleccionados] = useState([]);\n  const [name, setName] = useState('');\n  const [total, setTotal] = useState(0);\n\n\n  useEffect(() => {\n    firebase.firestore().collection(\"productos\").where('tipo', '==', tipo)\n      .get()\n      .then(dato => {\n        const array = [];\n        dato.forEach(doc => {\n          array.push({ id: doc.id, ...doc.data() });\n        });\n        setProductos(array)\n      })\n      .catch(error => {\n        console.log(\"Error getting documents: \", error);\n      });\n  }, [tipo]);\n\n  return (\n    <React.Fragment>\n      <Header />\n      <div className=\"column-pedidos fila Site-content\" >\n        <NuevaOrden setTipo={setTipo} productos={productos} name={name} setName={setName} seleccionados={seleccionados} setSeleccionados={setSeleccionados} />\n        <OrdenDetalles seleccionados={seleccionados} name={name} setName={setName} setSeleccionados={setSeleccionados} setTotal={setTotal} total={total} />\n      </div>\n      <Footer />\n    </React.Fragment>\n  );\n}\nexport default Mesero;","import React from 'react';\n\nconst TiempoDePreparacion = ({ p }) => {\n\n\tlet fin = p.duración.toDate().getTime(); \n\tlet inicio = p.hora.toDate().getTime();\n\tconst getTime = () => {\n\t\tlet miliseg = fin - inicio;\n\t\tlet hora = parseInt(((miliseg / (1000 * 60 * 60)) % 24));\n\t\tlet minutos = parseInt(((miliseg / (1000 * 60)) % 60));\n\t\tlet segundos = parseInt((miliseg / 1000) % 60);\n\t\tlet tiempo =(hora + ':' + minutos + ':' + segundos);\n\t\tconsole.log(tiempo);\n\t\treturn tiempo;\n\t}\n\treturn (\n\t\t<div className=\"row space-around principal\">\n\t\t\t<p>Tiempo de preparación:</p>\n\t\t\t<p>{getTime()}</p>\n\t\t</div>\n\t\t\n\n\t)\n}\nexport default TiempoDePreparacion;","import React from 'react';\nimport TiempoDePreparacion from './TiempoDePreparación'\n\nconst EstructuraDelPedido = ({ origen, Entregar, Listo }) => {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"row flex-wrap center\">\n\t\t\t\t{origen.map((p) => (\n\t\t\t\t\t<div key={p.id} className=\"product col\" >\n\t\t\t\t\t\t<p className=\"principal\">Cliente: {p.cliente}</p>\n\t\t\t\t\t\t<table className=\"\">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Producto</th>\n\t\t\t\t\t\t\t\t\t<th>Cantidad</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{p.productos.map(prod =>\n\t\t\t\t\t\t\t\t\t<tr key={prod.producto}>\n\t\t\t\t\t\t\t\t\t\t<td>{prod.producto}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{prod.cantidad}</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t\t<div className=\"row space-around principal\">\n\t\t\t\t\t\t\t<p>Hora de Pedido:</p>\n\t\t\t\t\t\t\t<p>{p.hora.toDate().getHours()}{':'}{p.hora.toDate().getMinutes()}{':'}{p.hora.toDate().getSeconds()}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"row space-around bold principal\">\n\t\t\t\t\t\t\t<p>Total a pagar:</p>\n\t\t\t\t\t\t\t<p> $ {p.total}</p>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{p.estado === 'pendiente' && (\n\t\t\t\t\t\t\t<button type=\"button\" onClick={() => Listo(p.id)}>\n\t\t\t\t\t\t\t\tMarcar como pedido LISTO\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{p.estado === 'listo' && (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<TiempoDePreparacion p={p} />\n\t\t\t\t\t\t\t\t<button type=\"button\" onClick={() => Entregar(p.id)}>\n\t\t\t\t\t\t\t\t\tMarcar como pedido ENTREGADO\n\t\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{p.estado === 'entregado' && (\n\t\t\t\t\t\t\t<p>El pedido fue entregado con exito</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n}\nexport default EstructuraDelPedido;","import React, { useState, useEffect } from 'react';\nimport firebase from '../firebase'\nimport Header from '../piezas/Header';\nimport Footer from '../piezas/Footer';\nimport EstructuraDelPedido from './EstructuraDelPedido';\n\nconst Cocina = () => {\n\tconst [orden, setOrden] = useState([]);\n\tconst [estado, setEstado] = useState('pendiente');\n\n\tuseEffect(() => {\n\t\tfirebase\n\t\t\t.firestore()\n\t\t\t.collection(\"orden\")\n\t\t\t.where('estado', '==', estado)\n\t\t\t.orderBy('hora', 'asc')\n\t\t\t.get()\n\t\t\t.then(dato => {\n\t\t\t\tconst array = [];\n\t\t\t\tdato.forEach(doc => {\n\t\t\t\t\tarray.push({ id: doc.id, ...doc.data() });\n\t\t\t\t});\n\t\t\t\tsetOrden(array)\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(\"Error getting documents: \", error);\n\t\t\t});\n\t}, [estado]);\n\n\n\tconst EntregarAMesa = (id) => {\n\t\tfirebase\n\t\t\t.firestore()\n\t\t\t.collection(\"orden\")\n\t\t\t.doc(id)\n\t\t\t.update({\n\t\t\t\testado: 'entregado',\n\t\t\t});\n\t}\n\n\tconst Listo = (id) => {\n\t\tfirebase\n\t\t\t.firestore()\n\t\t\t.collection(\"orden\")\n\t\t\t.doc(id)\n\t\t\t.update({\n\t\t\t\testado: 'listo',\n\t\t\t\tduración: new Date(),\n\t\t\t});\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Header />\n\t\t\t<div className=\"Site-content\">\n\t\t\t\t<div className=\"row center\">\n\t\t\t\t\t<button className=\"btn2\" onClick={() => setEstado('pendiente')}>Ver Pendientes</button>\n\t\t\t\t\t<button className=\"btn2\" onClick={() => setEstado('listo')}>Ver Listos</button>\n\t\t\t\t\t<button className=\"btn2\" onClick={() => setEstado('entregado')}>Ver Entregados</button>\n\t\t\t\t</div>\n\t\t\t\t{estado === 'pendiente' && (\n\t\t\t\t\t<h1>Pedidos Pendientes </h1>\n\t\t\t\t)}\n\t\t\t\t{estado === 'listo' && (\n\t\t\t\t\t<h1>Pedidos Listos </h1>\n\t\t\t\t)}\n\t\t\t\t{estado === 'entregado' && (\n\t\t\t\t\t<h1>Pedidos Entregados </h1>\n\t\t\t\t)}\n\t\t\t\t<EstructuraDelPedido Entregar={EntregarAMesa} origen={orden} Listo={Listo} />\n\t\t\t</div>\n\t\t\t<Footer />\n\t\t</React.Fragment>\n\t);\n}\nexport default Cocina;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport '../src/css/App.css'\nimport Home from './componentes/Home';\nimport Mesero from './componentes/Mesero/Mesero';\nimport Cocina from './componentes/Cocina/Cocina';\nimport EstructuraDelPedido from \"./componentes/Cocina/EstructuraDelPedido\";\n// import ListoParaServir from \"./componentes/Mesero/ListoParaServir\";\n// import Entregados from \"./componentes/Mesero/Entregados\";\n\nexport default function App() {\n  return (\n    <Router>\n      <div className=\"Site\">\n        <React.Fragment>\n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path=\"/about\">\n              <Mesero />\n            </Route>\n            <Route path=\"/cocina\">\n              <Cocina/>\n            </Route>\n            {/* <Route path=\"/despacho\">\n              <ListoParaServir />\n            </Route>\n            <Route path=\"/finalizados\">\n              <Entregados/>\n            </Route> */}\n             <Route path=\"/pendiente\">\n              <EstructuraDelPedido />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </React.Fragment>\n      </div>\n    </Router>\n  );\n}"],"sourceRoot":""}